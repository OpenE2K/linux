#!/bin/bash

debopt="$1"

KERNELRELEASE=xxKERNELRELEASExx
OSLUP="linux-$KERNELRELEASE"
INITRD=initrd-${KERNELRELEASE}.img

BOOTCONF=/boot/boot.conf
FMODULES=/etc/modules-$KERNELRELEASE
FINITRD=/boot/$INITRD

if [ x"$debopt" == x"upgrade" ]; then
#	echo "WARNING: linux-image-$KERNELRELEASE package cannot be upgraded."
#	echo "         Try to remove old package, then install new package,"
#	echo "         using --remove and --install action accordinaly."
	exit 0
fi
[ x"$debopt" == x"failed-upgrade" ] && exit 0
################################################################################
# delete initrd
################################################################################
clean_ramfs()
{
	rm -f $FINITRD
}
################################################################################
# delete /etc/modules-<kernelrelease>
################################################################################
clean_modules()
{
	rm -f $FMODULES
	ff=`cd /lib/modules/$KERNELRELEASE; ls modules.*`
	for f in $ff; do
		[ x$f == xmodules.builtin ] && continue
		[ x$f == xmodules.order ] && continue
		rm -f /lib/modules/$KERNELRELEASE/$f
	done
}
################################################################################
# update boot.conf
################################################################################
backup_bootconf()
{
	d=`date +%g%m%d%H%M`
	cp $BOOTCONF ${BOOTCONF}.$d
}
get_default_label()
{
	OSLDEF=`cat $BOOTCONF | grep "^default=" | tail -n 1 | sed -e 's/[\t ]*//g' -e 's/#.*//g' -e 's/default=//'`
}
delete_label()
{
	n1=`cat $BOOTCONF | sed -e 's/[\t ]*//g' | sed -e 's/#.*//g' | grep -n "label=${OSLUP}$" | sed 's/:.*//g'`
	[ x"$n1" == x ] && return
	n2=`cat $BOOTCONF | sed -e 's/[\t ]*//g' | sed -e 's/#.*//g' | grep -n "label=" | sed -n "/label=${OSLUP}$/{n;p;}" | sed 's/:.*//g'`
	if [ x"$n2" == x ]; then
		n2=`cat $BOOTCONF | wc -l`
	else
		(( n2-- ))
	fi
	sed -i "${n1},${n2}d" $BOOTCONF
	get_default_label
	if [ x"$OSLUP" == x"$OSLDEF" ]; then
		l=`cat $BOOTCONF | sed -e 's/[\t ]*//g' | sed -e 's/#.*//g' | grep "^label=" | head -n 1 | sed -e 's/label=//'`
		sed -i "s/^default=.*/default=${l}/" $BOOTCONF
	fi
}
oslup_bootconf()
{
	krelease=`uname -r`
	if [ x"$krelease" == x"$KERNELRELEASE" ]; then
		echo "ERROR: cannot delete current kernel: 'uname -r' $krelease"
		exit 1
	fi
	backup_bootconf
	delete_label
}
################################################################################
oslup_bootconf
clean_ramfs
clean_modules
